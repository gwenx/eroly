<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans    http://www.springframework.org/schema/beans/spring-beans-4.2.xsd      
                        http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context-4.2.xsd      
                        http://www.springframework.org/schema/cache    http://www.springframework.org/schema/cache/spring-cache-4.2.xsd">

	<!-- redis 相关配置 单redis和哨兵模式公用 -->
	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="150" />
		<property name="maxIdle" value="10" />
		<property name="maxWaitMillis" value="2000" />
		<property name="testOnBorrow" value="true" />
	</bean>
	<!-- 单redis和哨兵模式只能存在其一 -->
	<!-- 一、哨兵模式配置开始 -->
	<!-- 新加入的哨兵模式的配置 -->
	<!-- <bean id="sentinelConfiguration"
		class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
		<property name="master">
			<bean class="org.springframework.data.redis.connection.RedisNode">
				<property name="name" value="mymaster"></property>
			</bean>
		</property>
		<property name="sentinels">
			<set>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${sentinel1.ip}"></constructor-arg>
					<constructor-arg name="port" value="${sentinel1.port}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${sentinel2.ip}"></constructor-arg>
					<constructor-arg name="port" value="${sentinel2.port}"></constructor-arg>
				</bean>
				<bean class="org.springframework.data.redis.connection.RedisNode">
					<constructor-arg name="host" value="${sentinel3.ip}"></constructor-arg>
					<constructor-arg name="port" value="${sentinel3.port}"></constructor-arg>
				</bean>
			</set>
		</property>
	</bean> -->
	<!-- 带哨兵模式的配置，不加redis的ip和端口 -->
	<!-- <bean id="JedisConnectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:password="" p:pool-config-ref="poolConfig">
		<constructor-arg name="sentinelConfig" ref="sentinelConfiguration"></constructor-arg>
		</bean> -->
	<!-- 哨兵模式结束 -->
	<!-- 原始的，单redis配置 开始 -->
	<bean id="JedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" 
		p:host-name="127.0.0.1" p:port="6379" p:password="" p:pool-config-ref="poolConfig"/>
	<!-- 单redis配置结束 -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="JedisConnectionFactory" />
	</bean>
	<!-- 一下是是使用注解的方式时的配置，本项目没有用到注解的方式 -->
	<!-- spring自己的缓存管理器，这里定义了缓存位置名称 ，即注解中的value -->
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
		<property name="caches">
			<set>
				<!-- 这里可以配置多个redis -->
				<!-- <bean class="com.cn.util.RedisCache"> <property name="redisTemplate" 
					ref="redisTemplate" /> <property name="name" value="default"/> </bean> -->
				<bean class="com.eroly.util.RedisCache">
					<property name="redisTemplate" ref="redisTemplate" />
					<property name="name" value="common" />
					<!-- common名称要在类或方法的注解中使用 -->
				</bean>
			</set>
		</property>
	</bean>
	<!-- 启用缓存注解功能，这个是必须的，否则注解不会生效，另外，该注解一定要声明在spring主配置文件中才会生效 -->
	
	<cache:annotation-driven cache-manager="cacheManager" />

</beans>  